{"version":3,"sources":["logo.svg","components/header.js","components/footer.js","components/navbar.js","components/layout.js","components/postlist.js","pages/home.js","pages/about.js","pages/post.js","pages/notfound.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","React","createElement","className","Footer","Date","getFullYear","Navbar","Link","to","Layout","_ref","children","PostList","excerptList","postlist","map","post","content","split","slice","join","length","idx","key","id","title","date","author","ReactMarkdown","rehypePlugins","rehypeRaw","Home","About","style","textAlign","marginBottom","aboutText","Post","useParams","validId","parseInt","fetchedPost","postExists","postList","forEach","Navigate","NotFound","App","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6x6BAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2JCUzBC,MARAA,IAEPC,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,UAAI,qBCMDE,MATAA,IAEPH,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,uBAAsB,IAAIG,MAAOC,uBCMjCC,MATAA,IAEPN,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAACM,IAAI,CAACL,UAAU,QAAQM,GAAG,KAAI,QAC/BR,IAAAC,cAACM,IAAI,CAACL,UAAU,QAAQM,GAAG,UAAS,gBCWjCC,MAXAC,IAAgB,IAAfC,SAACA,GAASD,EACtB,OACIV,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACK,EAAM,MACPN,IAAAC,cAAA,WAAMU,GACNX,IAAAC,cAACE,EAAM,gCC4BJS,MAhCEA,KAIb,MAAMC,EAAcC,EAASC,IAAIC,GACtBA,EAAKC,QAAQC,MAAM,KAAKC,MAAM,EAAG,IAAIC,KAAK,MAGrD,OACIpB,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,MAAIC,UAAU,SAAQ,aACrBY,EAASO,QACNP,EAASC,IAAI,CAACC,EAAMM,IAMZtB,IAAAC,cAAA,OAAKsB,IAAKD,EAAKpB,UAAU,aACrBF,IAAAC,cAAA,UAAID,IAAAC,cAACM,IAAI,CAACL,UAAU,OAAOM,WAAYQ,EAAKQ,MAAOR,EAAKS,QACxDzB,IAAAC,cAAA,aAAO,gBAAce,EAAKU,KAAK,OAAKV,EAAKW,QACzC3B,IAAAC,cAAA,WACAD,IAAAC,cAAC2B,IAAa,CAACC,cAAe,CAACC,KAAYnB,SAAUE,EAAYS,KACjEtB,IAAAC,cAAA,aAAOD,IAAAC,cAACM,IAAI,CAACL,UAAU,OAAOM,WAAYQ,EAAKQ,MAAM,kCCdlEO,MAZf,WACI,OACI/B,IAAAC,cAAA,WACID,IAAAC,cAACQ,EAAM,KACHT,IAAAC,cAAA,MAAIC,UAAU,YACVF,IAAAC,cAACW,EAAQ,kBCUdoB,MAbDA,IAENhC,IAAAC,cAAA,WACID,IAAAC,cAACQ,EAAM,KACHT,IAAAC,cAAA,MAAIgC,MAAO,CAACC,UAAW,SAAUC,aAAc,SAAS,SACxDnC,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAC2B,IAAa,CAACC,cAAe,CAACC,MAAaM,EAAU,GAAGnB,mBC+B9DoB,MApCFA,KAIT,MAAMb,GAAEA,GAAOc,cACTC,EAAUC,SAAShB,GACnBiB,EAAc,GAIpB,IAAIC,GAAa,EAUjB,OATAC,EAASC,QAAQ,CAAC5B,EAAMM,KAChBiB,IAAYvB,EAAKQ,KACjBiB,EAAYhB,MAAQT,EAAKS,MAAQT,EAAKS,MAAQ,iBAC9CgB,EAAYf,KAAOV,EAAKU,KAAOV,EAAKU,KAAO,gBAC3Ce,EAAYd,OAASX,EAAKW,OAASX,EAAKW,OAAS,kBACjDc,EAAYxB,QAAUD,EAAKC,QAAUD,EAAKC,QAAU,aACpDyB,GAAa,KAGhBH,GAAYG,EAKb1C,IAAAC,cAACQ,EAAM,KACHT,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,UAAKwC,EAAYhB,OACjBzB,IAAAC,cAAA,aAAO,gBAAcwC,EAAYf,KAAK,OAAKe,EAAYd,QAC3D3B,IAAAC,cAAA,WACAD,IAAAC,cAAC2B,IAAa,CAACC,cAAe,CAACC,MAAaW,EAAYxB,WATrDjB,IAAAC,cAAC4C,IAAQ,CAACrC,GAAG,UCjBbsC,MAREA,IAET9C,IAAAC,cAACQ,EAAM,KACHT,IAAAC,cAAA,MAAIC,UAAU,YAAW,iDCOtB,SAAS6C,IACtB,OACE/C,IAAAC,cAAA,WACID,IAAAC,cAAC+C,IAAM,KACLhD,IAAAC,cAACgD,IAAM,KACHjD,IAAAC,cAACiD,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAASrD,IAAAC,cAAC8B,EAAI,QACpC/B,IAAAC,cAACiD,IAAK,CAACE,KAAK,SAASC,QAASrD,IAAAC,cAAC+B,EAAK,QACpChC,IAAAC,cAACiD,IAAK,CAACE,KAAK,YAAYC,QAASrD,IAAAC,cAACoC,EAAI,QACtCrC,IAAAC,cAACiD,IAAK,CAACE,KAAK,KAAKC,QAASrD,IAAAC,cAAC6C,EAAQ,WCXlCQ,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC3D,EAAA4D,EAAA,GAAAC,KAAA7D,EAAA8D,KAAA,UAAqBD,KAAKhD,IAAiD,IAAhDkD,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAStD,EACpEkD,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCCDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrE,IAAAC,cAACD,IAAMsE,WAAU,KACftE,IAAAC,cAAC8C,EAAG,QAORO","file":"static/js/main.f0e38365.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Androo's Webpage</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <hr/>\r\n            <p>&copy; AndrooTheChen {new Date().getFullYear()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link className=\"links\" to=\"/\">Home</Link>\r\n            <Link className=\"links\" to=\"/about\">About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport Navbar from \"./navbar\"\r\n\r\nimport \"./components.css\"\r\n\r\nconst Layout = ({children}) => {\r\n    return (\r\n        <div className=\"layout\">\r\n            <Header />\r\n            <Navbar />\r\n            <div>{children}</div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport rehypeRaw from 'rehype-raw'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport postlist from \"../posts.json\";\r\n\r\nimport \"./components.css\";\r\n\r\nconst PostList = () => {\r\n    // Trim the post contents to show an abridged version for posts\r\n    // on the main post list page. We will show the full post\r\n    // when users click on each one.\r\n    const excerptList = postlist.map(post => {\r\n        return post.content.split(\" \").slice(0, 20).join(\" \")\r\n    })\r\n\r\n    return (\r\n        <div className=\"postlist\">\r\n            <h1 className=\"title\">All Posts</h1>\r\n            {postlist.length && \r\n                postlist.map((post, idx) => {\r\n                    return (\r\n                        // TODO: change key to something better. we just do this because\r\n                        // each child in a list should have a unique key, but index probably \r\n                        // isn't best practice.\r\n                        // https://reactjs.org/docs/lists-and-keys.html#keys\r\n                        <div key={idx} className=\"post-card\">\r\n                            <h2><Link className=\"link\" to={`post/${post.id}`}>{post.title}</Link></h2>\r\n                            <small>Published on {post.date} by {post.author}</small>\r\n                            <hr />\r\n                            <ReactMarkdown rehypePlugins={[rehypeRaw]} children={excerptList[idx]} />\r\n                            <small><Link className=\"link\" to={`post/${post.id}`}>Continue reading...</Link></small>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\"\r\nimport PostList from \"../components/postlist\"\r\nimport \"./pages.css\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <h1 className=\"postlist\">\r\n                    <PostList />\r\n                </h1>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport aboutText from \"../pages.json\";\r\nimport rehypeRaw from 'rehype-raw';\r\nimport Layout from \"../components/layout\";\r\n\r\nimport \"./pages.css\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <h1 style={{textAlign: `center`, marginBottom: `40px`}}>About</h1>\r\n                <div className=\"page-content\">\r\n                    <ReactMarkdown rehypePlugins={[rehypeRaw]}>{aboutText[0].content}</ReactMarkdown>\r\n                </div>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport Layout from \"../components/layout\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\nimport { Navigate, useParams } from \"react-router-dom\"\r\n\r\nimport postList from \"../posts.json\"\r\n\r\nconst Post = () => {\r\n    // Get the ID used in the dynamic route and make sure it's valid.\r\n    // For now we're just saying a valid page has an integer ID. \r\n    // TODO make this better.\r\n    const { id } = useParams()\r\n    const validId = parseInt(id)\r\n    const fetchedPost = {}\r\n\r\n    // Loop over all of our existing posts to ensure that the requested\r\n    // post ID is valid.\r\n    let postExists = false\r\n    postList.forEach((post, idx) => {\r\n        if (validId === post.id) {\r\n            fetchedPost.title = post.title ? post.title : \"No title given\"\r\n            fetchedPost.date = post.date ? post.date : \"No date given\"\r\n            fetchedPost.author = post.author ? post.author : \"No author given\"\r\n            fetchedPost.content = post.content ? post.content : \"No content\"\r\n            postExists = true\r\n        }\r\n    })\r\n    if (!validId || !postExists) {\r\n        return <Navigate to=\"/404\" />\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"post\">\r\n                <h2>{fetchedPost.title}</h2>\r\n                <small>Published on {fetchedPost.date} by {fetchedPost.author}</small>\r\n            <hr />\r\n            <ReactMarkdown rehypePlugins={[rehypeRaw]}>{fetchedPost.content}</ReactMarkdown>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\nimport \"./pages.css\"\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Layout>\r\n            <h1 className=\"notfound\">The page you are looking for does not exist!</h1>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default NotFound","import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home';\nimport About from './pages/about';\nimport Post from './pages/post';\nimport NotFound from \"./pages/notfound\";\nimport React from 'react';\n\n\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div>\n        <Router>\n          <Routes>\n              <Route exact path=\"/\" element={<Home/>} />\n              <Route path=\"/about\" element={<About/>} />\n              <Route path=\"/post/:id\" element={<Post/>} />\n              <Route path=\"/*\" element={<NotFound/>} />\n          </Routes>\n        </Router>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport \"typeface-raleway\"\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}